class Solution {
    public int findCircleNum(int[][] graph) 
    {
        int result = BFS(0,graph);
        return result;
    }
    public void BFSHelper(int[][] graph, boolean[] visited, int sv)
	{
		Queue<Integer> q = new LinkedList<>();
		q.add(sv);
		visited[sv] = true;
		int v = graph.length;
		while(!q.isEmpty())
		{
			int temp = q.poll();
			for(int i=0;i<v;i++)
			{
				if(graph[temp][i] == 1 && visited[i]==false)
				{
					q.add(i);
					visited[i] = true;
				}
			}
		}
	}
	
	
	public int BFS(int ans, int[][] graph)
	{
		int v = graph.length;
		boolean visited[] = new boolean[v];
		for(int i=0;i<v;i++)
		{
			if(!visited[i])
			{
				ans++;
				BFSHelper(graph, visited, i);
			}
		}
		return ans;
	}
}
