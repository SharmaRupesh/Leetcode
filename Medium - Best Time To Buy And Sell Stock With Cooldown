class Solution {
    public static int profit(int[] stock, int i, int BuyOrSell, HashMap<String,Integer> map)
	{
		if(i>=stock.length)
			return 0;
		
        String key = i + "check" + BuyOrSell;
        if(map.containsKey(key))
            return map.get(key);
        
        
        
		int result=0;
		if(BuyOrSell == 0)
		{
			int buy = profit(stock, i+1, 1, map) - stock[i];
			int nobuy = profit(stock, i+1, 0, map);
			result = Math.max(buy,nobuy);
		}
		else
		{
			int sell = profit(stock, i+2, 0, map) + stock[i];
			int nosell = profit(stock, i+1, 1, map);
			result = Math.max(sell, nosell);
		}
        
        map.put(key,result);
		
		return result;
	}
	
	
	
	public static int maxProfit(int[] stock)
	{
        HashMap<String, Integer> map =new HashMap();
		return profit(stock, 0, 0, map);
	}
}
